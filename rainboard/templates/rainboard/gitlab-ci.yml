# https://rainboard.laas.fr/project/{{ project.slug }}/.gitlab-ci.yml

{% for robotpkg in project.ordered_robotpkg %}.robotpkg-{{ robotpkg }}: &robotpkg-{{ robotpkg }}
  retry:
    max: 2
    when: runner_system_failure
  except:
    - gh-pages
  script:
    - sccache -s
    - cd /root/robotpkg/{{ robotpkg.category }}
    - git pull
{% if robotpkg.without_py %}    - cd {{ robotpkg.without_py }}
    - make checkout MASTER_REPOSITORY="git ${CI_PROJECT_DIR}/.git"
    - cd ..
{% endif %}    - cd {{ robotpkg }}
    - make checkout MASTER_REPOSITORY="git ${CI_PROJECT_DIR}/.git"
    - make install
    - build=$(make show-var VARNAME=CONFIGURE_DIRS); cd $(make show-var VARNAME=WRKSRC); cd $build
{% if project.tests %}    - touch CMakeLists.txt && make && make test
{% endif %}    - sccache -s
{% for image in robotpkg.valid_images %}{{ image.get_job_name }}:
  <<: *robotpkg-{{ robotpkg }}
  image: {{ image.get_image_name }}
{% if image.allow_failure %}  allow_failure: true
{% endif %}
{% endfor %}{% endfor %}{% if project.tests or project.docs %}doc-coverage:
{% with image=project.doc_coverage_image %}  <<: *robotpkg-{{ image.robotpkg }}
  image: {{ image.get_image_name }}
  before_script:
    - echo -e 'CXXFLAGS+= --coverage\nLDFLAGS+= --coverage\nPKG_DEFAULT_OPTIONS= debug' >> /opt/openrobots/etc/robotpkg.conf
  after_script:
    - cd /root/robotpkg/{{ image.robotpkg.category }}/{{ image.robotpkg }}{% endwith %}
    - build=$(make show-var VARNAME=CONFIGURE_DIRS); cd $(make show-var VARNAME=WRKSRC); cd $build
{% if project.docs %}    - make doc
    - mv doc/doxygen-html ${CI_PROJECT_DIR}
{% endif %}{% if project.tests%}    - mkdir -p ${CI_PROJECT_DIR}/coverage/
    - gcovr -e CMakeFiles -e _deps -r .
    - gcovr -e CMakeFiles -e _deps -r . --html --html-details -o ${CI_PROJECT_DIR}/coverage/index.html
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
{% endif %}  artifacts:
    expire_in: 1 day
    paths:
      - doxygen-html/
      - coverage/
{% endif %}
linters:
  image:
    name: gepetto/linters
    entrypoint: [""]
{% if project.allow_format_failure %}  allow_failure: true
{% endif %}  retry:
    max: 2
    when: runner_system_failure
  script:
    - entrypoint.sh {{ project.linters }}
